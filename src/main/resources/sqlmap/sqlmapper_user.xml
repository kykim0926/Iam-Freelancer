<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="iamFreelancer.login.mapper.LoginMapper">

	<!-- 회원 정보 조회 -->
	<select id="findByLoginId" resultType="iamFreelancer.login.vo.UserVO">
		SELECT *
		  FROM tb_member m LEFT OUTER JOIN TB_MEMBER_ROLE r ON m.login_id = r.login_id
		 WHERE m.login_id = #{login_id}
    </select>
    
    <!-- 이름과 이메일로 로그인 아이디 찾기 -->
   	<select id="findByNameAndEmail" resultType="String">
		SELECT m.login_id
		  FROM tb_member m LEFT OUTER JOIN TB_MEMBER_ROLE r ON m.login_id = r.login_id
		 WHERE m.name = #{name}
		   AND m.email= #{email}
    </select>
    
	<!-- 회원 저장 -->
	<insert id="memberSave" parameterType="iamFreelancer.login.vo.UserVO">
	    INSERT INTO tb_member
        (
            login_id,
			login_pwd,
			name,
			email,
			phone_num,
			mobile_num,
			addr,
			post_num,
			user_type,
			bank,
			bank_account,
			regist_route,
			user_kind,
			addr_detail
        )
        VALUES
        (
            #{login_id},
			#{login_pwd},
			#{name},
			#{email},
			#{phone_num},
			#{mobile_num},
			#{addr},
			#{post_num},
			#{user_type},
			#{bank},
			#{bank_account},
			#{regist_route},
			#{user_kind},
			#{addr_detail}
        )
	</insert>

	<!-- 회원 권한 insert -->
	<insert id="memberRoleSave">
		INSERT INTO tb_member_role
        (
            login_id,
            role_id
        )
        VALUES
        (
            #{login_id},
            #{role_id}
        )
	</insert>
	
	<!-- 회원 존재 여부 -->
	<select id="existYnByLoginId" parameterType="iamFreelancer.login.vo.UserVO" resultType="Integer">
			SELECT count(1)
			  FROM tb_member
			 WHERE login_id = #{login_id}
	</select>
	
	<!-- 회원 정보 update -->
	<update id="memberInfoUpdate" parameterType="iamFreelancer.login.vo.UserVO">
		UPDATE tb_member SET
			name = #{name},
			mobile_num = #{mobile_num},
			phone_num = #{phone_num},
			email = #{email},
			post_num = #{post_num},
			addr = #{addr},
			addr_detail = #{addr_detail},
			user_type = #{user_type}
	    WHERE login_id = #{login_id}
	</update>
	
	<!-- 회원 로그인 패스워드 update -->
	<update id="memberLoginPwdUpdate" parameterType="iamFreelancer.login.vo.UserVO">
		UPDATE tb_member SET
			login_pwd = #{login_pwd}
		WHERE login_id = #{login_id}
	</update>
	
</mapper>